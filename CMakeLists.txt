CMAKE_MINIMUM_REQUIRED(VERSION 3.0.2)
PROJECT(Hercules)

IF(NOT ${PROJECT_SOURCE_DIR} STREQUAL ${PROJECT_BINARY_DIR})
	MESSAGE(FATAL_ERROR "Out-of-source builds are currently not supported. Please build Hercules inside the source directory.")
ENDIF()

SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)

FIND_PACKAGE(MySQL 5 REQUIRED)
IF(MYSQL_FOUND)
	INCLUDE_DIRECTORIES(${MYSQL_INCLUDE_DIRS})
ENDIF(MYSQL_FOUND)

FIND_PACKAGE(ZLIB REQUIRED)
IF(ZLIB_FOUND)
	INCLUDE_DIRECTORIES(${ZLIB_INCLUDE_DIRS})
ENDIF(ZLIB_FOUND)

FIND_PACKAGE(Threads REQUIRED)

FIND_LIBRARY(M_LIBRARY m)
IF(M_LIBRARY)
	LIST(APPEND ADDITIONAL_LINK_LIBRARIES ${M_LIBRARY})
ENDIF(M_LIBRARY)

IF(WIN32)
	LIST(APPEND ADDITIONAL_LINK_LIBRARIES wsock32)
	LIST(APPEND ADDITIONAL_LINK_LIBRARIES ws2_32)
ENDIF(WIN32)

IF(WIN32)
	# First for the generic no-config case (e.g. with mingw)
	SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
	# Second, for multi-config builds (e.g. msvc)
	FOREACH(OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES})
		STRING(TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG)
		SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_BINARY_DIR})
	ENDFOREACH(OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES)
ENDIF(WIN32)

STRING(TIMESTAMP YEAR "%Y" UTC)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/src)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/3rdparty)

ADD_SUBDIRECTORY(3rdparty/libconfig)
ADD_SUBDIRECTORY(3rdparty/mt19937ar)
ADD_SUBDIRECTORY(src/common)
ADD_SUBDIRECTORY(src/login)
